services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - '8080:8080'
    environment:
      NODE_ENV: ${NODE_ENV}
      API_PORT: ${API_PORT}
      SYSTEM_LANGUAGE: ${SYSTEM_LANGUAGE}
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      WEBZ_IO_API_KEY: ${WEBZ_IO_API_KEY}
      WEBZ_NEWS_URL: ${WEBZ_NEWS_URL}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./data:/app/data
    networks:
      - app-network

  db:
    image: postgres:14-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '5432:5432'
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME} -d ${DB_NAME}']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL} # Set this in your .env file
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD} # Set this in your .env file
    ports:
      - '5050:80'
    depends_on:
      - db
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - app-network

volumes:
  db-data:
    driver: local
  pgadmin-data:
    driver: local

networks:
  app-network:
    driver: bridge
